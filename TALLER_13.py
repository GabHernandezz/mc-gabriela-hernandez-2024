# -*- coding: utf-8 -*-
"""TALLER_13.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Dlxma2Lotowfant-00tn3QBOQkviPQho

#TALLER 13
"""

import math

def calcular_estimacion(x, n):

    def funcion(x):
        return math.exp(-x)

    def derivada(x):
        return -math.exp(-x)


    termino_taylor = derivada(0.5) / math.factorial(n) * (x - 0.5)**n


    estimacion = funcion(0.5) + termino_taylor

    return estimacion

def calcular_error(estimacion_real, estimacion_aprox):

    error = abs(estimacion_real - estimacion_aprox) / estimacion_real * 100
    return error

def main():
    x_real = 0.505
    x_base = 0.5
    valor_real = math.exp(-x_real)
    for n in range(16):
        estimacion = calcular_estimacion(x_real, n)
        error = calcular_error(valor_real, estimacion)
        print("Orden", n, "Estimaci√≥n:",  estimacion, "Error: ", error, "%")

if __name__ == "__main__":
    main()