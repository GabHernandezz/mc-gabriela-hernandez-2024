# -*- coding: utf-8 -*-
"""TALLER_14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C0Ciu5yMx_vCzJblecvWgrR5WnHi2XDZ

#TALLER 14

##Punto 1.
"""

def producto_escalar(v1, v2):

    if len(v1) != len(v2):
        return "Los vectores deben tener la misma longitud."


    producto = sum(x * y for x, y in zip(v1, v2))
    return producto

def main():
    n = int(input("Escriba la cantidad de elementos para los dos vectores: "))
    print("Ingrese los elementos del primer vector:")
    vector1 = [float(input(f"Elemento {i + 1}: ")) for i in range(n)]


    print("Ingrese los elementos del segundo vector:")
    vector2 = [float(input(f"Elemento {i + 1}: ")) for i in range(n)]

    resultado = producto_escalar(vector1, vector2)
    print("El producto escalar de los dos vectores es:", resultado)

if __name__ == "__main__":
    main()

"""##Punto 2."""

#Esta es la función para agregar elementos a la "lista" que sería para construir el vector.
def matrizu(filas, columnas):
    matriz = []
    for i in range(filas):
        fila = []
        for j in range(columnas):
            valor = float(input(f"Ingrese el elemento ({i+1}, {j+1}): "))
            fila.append(valor)
        matriz.append(fila)
    return matriz

#Aquí para mostrar por consola la matriz dada por el usuario.
def mostrar(matriz):
    for fila in matriz:
        print(fila)
#Esta es la función para multiplicar por escalar. Se multiplica cada uno de los elementos por escalar y se agrega a una nueva "lista" (vector).
def multiplicar_por_escalar(matriz, escalar):
    resultado = []
    for fila in matriz:
        new = [elemento * escalar for elemento in fila]
        resultado.append(new)
    return resultado
#Esto es para sumar las matrices, elemento por elemento (los que sean correspondientes).
def sumar_matrices(matriz1, matriz2):
    resultado = []
    for fila1, fila2 in zip(matriz1, matriz2):
        new = [elemento1 + elemento2 for elemento1, elemento2 in zip(fila1, fila2)]
        resultado.append(new)
    return resultado
#Esta función para la multiplicación entre las dos matrices dadas por el usuario (usando dimensiones ([i][j]).
def multiplicar_matrices(matriz1, matriz2):
    resultado = []
    for fila in matriz1:
        nueva_fila = []
        for i in range(len(matriz2[0])):
            suma = 0
            for j in range(len(fila)):
                suma += fila[j] * matriz2[j][i]
            nueva_fila.append(suma)
        resultado.append(nueva_fila)
    return resultado

#La función prinicipal para pedirle al usuario el número de filas y columnas de ambas matrices, los valores de los elementos y la operación que se desea realizar.
def main():

    filas_a = int(input("Ingrese el número de filas de la matriz A: "))
    columnas_a = int(input("Ingrese el número de columnas de la matriz A: "))
    matriz_a = matrizu(filas_a, columnas_a)


    filas_b = int(input("Ingrese el número de filas de la matriz B: "))
    columnas_b = int(input("Ingrese el número de columnas de la matriz B: "))
    matriz_b = matrizu(filas_b, columnas_b)


    if columnas_a == columnas_b and filas_a == filas_b:
        opcion = input("Seleccione la operación a realizar (Elegir únicamente la letra: a, b, c, d): \n a. 3b \n b. 4A \n c. A + B \n B x A \n")

        if opcion == 'a':
            escalar = int(input("Ingrese el escalar para la operación 3A: "))
            resultado = multiplicar_por_escalar(matriz_a, escalar)
            print("Resultado de la operación 3A:")
            mostrar(resultado)
        elif opcion == 'b':
            escalar = int(input("Ingrese el escalar para la operación 4B: "))
            resultado = multiplicar_por_escalar(matriz_b, escalar)
            print("Resultado de la operación 4B:")
            mostrar(resultado)
        elif opcion == 'c':
            resultado = sumar_matrices(matriz_a, matriz_b)
            print("Resultado de la operación A + B:")
            mostrar(resultado)
        elif opcion == 'd':
            resultado = multiplicar_matrices(matriz_b, matriz_a)
            print("Resultado de la operación B × A:")
            mostrar(resultado)
        else:
            print("Opción no válida.")
    #Si las matrices no son compatibles, Ej. una matriz 2x2 y un 4x1, se imprimirá un aviso de que las dimensiones impiden la realización de operaciones y no se ejecutará el menú de operaciones.
    else:
        print("Las dimensiones de las matrices no son compatibles para realizar las operaciones.")

if __name__ == "__main__":
    main()