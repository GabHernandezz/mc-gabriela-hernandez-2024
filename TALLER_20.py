# -*- coding: utf-8 -*-
"""TALLER_20.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oQNnG2tJThKJJE-8yI9xI9M9JAzrm4aX
"""

import numpy as np
import matplotlib.pyplot as plt

x = np.array([1, 2, 3, 4, 5, 6, 7])
y = np.array([0.1, 0.3, 0.9, 1.7, 2.8, 4.5, 6.9])

n = len(x)
X = np.column_stack([np.ones(n), x])
beta = np.linalg.inv(X.T.dot(X)).dot(X.T).dot(y)

intercepto = beta[0]
pendiente = beta[1]

ecuacion = pendiente * x + intercepto
r = np.corrcoef(x, y)[0, 1]
r_2 = r ** 2
desv_estandar = np.std(y, ddof=1)
error = np.sqrt(np.sum((y - ecuacion) ** 2) / (n - 2))

print("r:", r)
print("r^2:", r_2)
print("sy:", desv_estandar)
print("Error de la estimación:", error)

plt.scatter(x, y, color='blue', label='Datos')
plt.plot(x, ecuacion, color='red', label='Regresión Lineal')
plt.xlabel('x')
plt.ylabel('y')
plt.title('Regresión Lineal y Datos')
plt.legend()
plt.grid(True)
plt.show()