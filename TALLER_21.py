# -*- coding: utf-8 -*-
"""TALLER_21.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NmgFn2xVYv9rY20XPgtX62ut7OZ0ytDF
"""

import numpy as np
import matplotlib.pyplot as plt

x = np.array([1, 3, 5, 7, 9, 11, 13])
y = np.array([7.4, 1.8, -1, -1.8, -1.2, 2.2, 7.2])

n = len(x)
A = np.zeros((3, 3))
B = np.zeros((3, 1))

A[0, 0] = n
A[0, 1] = np.sum(x)
A[0, 2] = np.sum(x**2)

A[1, 0] = np.sum(x)
A[1, 1] = np.sum(x**2)
A[1, 2] = np.sum(x**3)

A[2, 0] = np.sum(x**2)
A[2, 1] = np.sum(x**3)
A[2, 2] = np.sum(x**4)

B[0, 0] = np.sum(y)
B[1, 0] = np.sum(x*y)
B[2, 0] = np.sum(x**2*y)

X = np.linalg.solve(A, B)

a0 = X[0, 0]
a1 = X[1, 0]
a2 = X[2, 0]


ymean = np.mean(y)
SS_tot = np.sum((y - ymean)**2)
y_pred = a0 + a1*x + a2*x**2
SS_res = np.sum((y - y_pred)**2)
r_squared = 1 - (SS_res / SS_tot)
r = np.sqrt(r_squared)

print(f"La ecuación de ajuste es y = {a0:.2f} + {a1:.2f}x + {a2:.2f}x^2")
print(f"El coeficiente de correlación es r = {r*100:.2f}%")


plt.figure()
plt.scatter(x, y, color='blue', label='Datos')
plt.plot(x, y_pred, color='red', label='Ajuste')
plt.xlabel('x')
plt.ylabel('y')
plt.legend()
plt.title('Ajuste de polinomio de segundo grado')
plt.grid(True)
plt.show()